on:
    workflow_call:
      inputs:
        path:
          required: true
          type: string
        cluster_name:
          required: true
          type: string
        service_name:
          required: true
          type: string
        repository_name:
          required: true
          type: string
      secrets:
        AWS_ACCESS_KEY_ID:
          required: true
        AWS_SECRET_ACCESS_KEY:
          required: true
        AWS_REGION:
          required: true
        AWS_ROLE:
          required: true
        SENTRY_AUTH_TOKEN:
            required: false
jobs:
    image-deploy:
        runs-on: arm-runner
        #     if: github.event.pull_request.merged == 'true'
        steps:


        #Get Branch name
        - name: Extract Branch Name
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: extract_branch

        - name: Checkout Repository
          uses: actions/checkout@v2

        #Get account id for account
        - name: Get Account ID
          shell: bash
          run: echo "##[set-output name=accountID;]$(echo account-id-${{steps.extract_branch.outputs.branch}})"
          id: extract_account_ids

        #Load credentials for tools
        - name: Load Tools Credentials
          uses: "aws-actions/configure-aws-credentials@v1"
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        #Fetch account id for env
        - name: Get Account ID from Parameter Store
          uses: "marvinpinto/action-inject-ssm-secrets@latest"
          with:
            ssm_parameter: ${{steps.extract_account_ids.outputs.accountID}}
            env_variable_name: "ACCOUNT_ROLE"

        #Set account arn
        - name: Account Role
          shell: bash
          run: echo "##[set-output name=arn;]$(echo arn:aws:iam::$ACCOUNT_ROLE:role/${{secrets.AWS_ROLE}})"
          id: account_role_arn

        #Assume role for arn
        - name: Assume Role in Target Account
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            role-to-assume: ${{steps.account_role_arn.outputs.arn}}
            aws-region: ${{ secrets.AWS_REGION }}
            role-duration-seconds: 900 # 30 min

        #Login to ecr
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        # Set up Docker Buildx for multi-arch builds
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        # Build and push multi-arch Docker image using Buildx
        - name: Build and push multi-arch Docker image
          uses: docker/build-push-action@v3
          with:
            context: ${{ inputs.path }}
            push: true
            platforms: linux/amd64,linux/arm64
            build-args: |
                AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
                SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
                ENV=${{ steps.extract_branch.outputs.branch }}
            tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository_name }}:${{ github.sha }}



